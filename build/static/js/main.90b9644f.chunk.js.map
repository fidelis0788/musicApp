{"version":3,"sources":["Components/NavBar.js","Components/Dashboard.js","App.js","reportWebVitals.js","index.js"],"names":["NavBar","AppBar","position","Toolbar","Typography","component","Dashboard","props","handleOnline","setState","online","state","handleVolume","event","value","volume","handleQuality","quality","target","componentDidUpdate","Props","State","notifications","push","length","className","variant","color","Card","CardContent","fontWeight","CardActions","Switch","checked","this","onChange","Slider","marks","step","min","max","Select","MenuItem","map","notification","index","React","Component","App","username","password","loggedIn","handleChange","e","name","login","onSubmit","TextField","label","type","placeholder","required","Button","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"qSAkBeA,EAdA,WACb,OACE,8BACG,cAACC,EAAA,EAAD,CAAQC,SAAS,SAAjB,SACG,cAACC,EAAA,EAAD,UACE,cAACC,EAAA,EAAD,CAAYC,UAAU,KAAtB,iC,+DCkIGC,E,kDAvIb,WAAYC,GAAO,IAAD,8BAChB,cAAMA,IASRC,aAAe,WACb,EAAKC,SAAS,CACZC,QAAS,EAAKC,MAAMD,UAZN,EAgBlBE,aAAe,SAACC,EAAOC,GACrB,EAAKL,SAAS,CACZM,OAAQD,KAlBM,EAsBlBE,cAAgB,SAACH,GACf,EAAKJ,SAAS,CACZQ,QAASJ,EAAMK,OAAOJ,SAxBR,EA4BlBK,mBAAqB,SAACC,EAAMC,GAC1B,IAAIC,EAAgB,IACK,IAAtB,EAAKX,MAAMD,QACZY,EAAcC,KAAK,6FAElB,EAAKZ,MAAMI,OAAS,IACrBO,EAAcC,KAAK,2EAEK,IAAvB,EAAKZ,MAAMM,SACZK,EAAcC,KAAK,6EAElBF,EAAMC,cAAcE,SAAWF,EAAcE,QAC9C,EAAKf,SAAS,CACZa,cAAeA,KAvCnB,EAAKX,MAAQ,CACbD,QAAQ,EACRK,OAAQ,GACRE,QAAS,EACTK,cAAe,IANC,E,qDAiDhB,OACE,sBAAKG,UAAU,sBAAf,UAEE,qBAAKA,UAAU,iBAAf,SACE,cAACrB,EAAA,EAAD,CAAYC,UAAU,KAAKqB,QAAQ,KAAKC,MAAM,gBAA9C,6BAGF,sBAAKF,UAAU,kBAAf,UACE,eAACG,EAAA,EAAD,CAAMH,UAAU,OAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAYC,UAAU,KAAKyB,WAAW,iBAAtC,yBAGA,uBACA,cAAC1B,EAAA,EAAD,CAAYsB,QAAQ,QAAQC,MAAM,gBAAgBtB,UAAU,IAA5D,+DAID,cAAC0B,EAAA,EAAD,UACC,cAACC,EAAA,EAAD,CACEC,QAASC,KAAKvB,MAAMD,OACpByB,SAAUD,KAAK1B,aACfM,MAAOoB,KAAKvB,MAAMD,cAKxB,eAACkB,EAAA,EAAD,CAAMH,UAAU,OAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAYC,UAAU,KAAKyB,WAAW,iBAAtC,2BAGA,uBACA,cAAC1B,EAAA,EAAD,CAAYsB,QAAQ,QAAQC,MAAM,gBAAgBtB,UAAU,IAA5D,uEAIF,cAAC0B,EAAA,EAAD,UACE,cAACK,EAAA,EAAD,CACEC,OAAO,EACPC,KAAM,GACNC,IAAK,EACLC,IAAK,IACLL,SAAUD,KAAKtB,aACfE,MAAOoB,KAAKvB,MAAMI,cAKxB,eAACa,EAAA,EAAD,CAAMH,UAAU,OAAhB,UACE,eAACI,EAAA,EAAD,WACE,cAACzB,EAAA,EAAD,CAAYC,UAAU,KAAKyB,WAAW,iBAAtC,2BAGA,uBACA,cAAC1B,EAAA,EAAD,CAAYsB,QAAQ,QAAQC,MAAM,gBAAgBtB,UAAU,IAA5D,+EAIF,cAAC0B,EAAA,EAAD,UACE,eAACU,EAAA,EAAD,CAAQ3B,MAAOoB,KAAKvB,MAAMM,QAASkB,SAAWD,KAAKlB,cAAnD,UACE,cAAC0B,EAAA,EAAD,CAAU5B,MAAO,EAAjB,iBACA,cAAC4B,EAAA,EAAD,CAAU5B,MAAO,EAAjB,oBACA,cAAC4B,EAAA,EAAD,CAAU5B,MAAO,EAAjB,6BAMR,sBAAKW,UAAU,0BAAf,UACE,cAACrB,EAAA,EAAD,CAAYC,UAAU,KAAKqB,QAAQ,KAAnC,mCACA,8BACGQ,KAAKvB,MAAMW,cAAcqB,KAAI,SAACC,EAAcC,GAAf,OAC1B,4BACGD,GADKC,kB,GA3HAC,IAAMC,WC6DfC,G,kNAzDbrC,MAAQ,CACNsC,SAAU,GACVC,SAAU,GACVC,UAAU,G,EAGZC,aAAe,SAAAC,GACb,EAAK5C,SAAL,eACG4C,EAAEnC,OAAOoC,KAAOD,EAAEnC,OAAOJ,S,EAI9ByC,MAAQ,SAAAF,GACN,EAAK5C,SAAS,CACZwC,SAAU,GACVC,SAAU,GACVC,UAAU,K,uDAKZ,OACE,gCACG,cAAC,EAAD,IAEAjB,KAAKvB,MAAMwC,SAAW,cAAC,EAAD,IACtB,qBAAK1B,UAAU,iBAAf,SACC,uBAAMA,UAAU,aAAa+B,SAAUtB,KAAKqB,MAA5C,UACE,cAACE,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,OACLC,YAAa,YACb9C,MAAOoB,KAAKvB,MAAMsC,SAClBd,SAAUD,KAAKkB,aACfE,KAAK,WACLO,UAAQ,IAEV,cAACJ,EAAA,EAAD,CACEC,MAAM,WACNC,KAAK,WACLC,YAAY,YACZ9C,MAAOoB,KAAKvB,MAAMuC,SAClBf,SAAUD,KAAKkB,aACfE,KAAK,WACLO,UAAQ,IAEV,uBACA,cAACC,EAAA,EAAD,CAAQpC,QAAQ,YAAYC,MAAM,UAAUgC,KAAK,SAAjD,+B,GAhDMb,IAAMC,YCMTgB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,8BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.90b9644f.chunk.js","sourcesContent":["\nimport React from 'react';\n import { AppBar, Typography,Toolbar } from '@material-ui/core';\n\nconst NavBar = () => {\n  return (\n    <div>\n       <AppBar position=\"center\">\n          <Toolbar>\n            <Typography component=\"h1\">\n                My Music App\n         </Typography>\n        </Toolbar>\n        </AppBar>\n    </div>\n  )\n}\n\nexport default NavBar;","import React from 'react';\nimport { Card, CardContent, CardActions, Typography, Switch, Slider, Select, MenuItem } from '@material-ui/core';\n\nclass Dashboard extends React.Component {\n  constructor(props){\n    super(props)\n    this.state = {\n    online: true,\n    volume: 60,\n    quality: 2,\n    notifications: []\n    }\n  }\n\n  handleOnline = () => {\n    this.setState({\n      online: !this.state.online\n    });\n  }\n\n  handleVolume = (event, value) => {\n    this.setState({\n      volume: value\n    });\n  }\n\n  handleQuality = (event) => {\n    this.setState({\n      quality: event.target.value\n    });\n  }\n\n  componentDidUpdate = (Props,State) => {\n    let notifications = [];\n    if(this.state.online === false){\n      notifications.push(\"Your application is offline. You won't be able to share or stream music to other devices.\");\n    } \n    if(this.state.volume > 70){\n      notifications.push(\"Listening to music at a high volume could cause long-term hearing loss.\");\n    } \n    if(this.state.quality === 1){\n      notifications.push(\"Music quality is degraded. Increase quality if your connection allows it.\");\n    } \n    if(State.notifications.length !== notifications.length){\n      this.setState({\n        notifications: notifications\n      });\n    }\n    \n  }\n\n\n  render() {\n    return (\n      <div className=\"dashboard-container\">\n\n        <div className=\"welcome-header\">\n          <Typography component=\"h2\" variant=\"h5\" color=\"textSecondary\">Welcome User!</Typography>\n        </div>\n\n        <div className=\"cards-container\">\n          <Card className=\"card\">\n            <CardContent>\n              <Typography component=\"h4\" fontWeight=\"fontWeightBold\">\n                Online Mode\n              </Typography>\n              <br />\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Is this application connected to the internet?\n              </Typography>\n            </CardContent>\n            {<CardActions>\n              <Switch \n                checked={this.state.online} \n                onChange={this.handleOnline} \n                value={this.state.online} \n              />\n            </CardActions>} \n          </Card>\n\n          <Card className=\"card\">\n            <CardContent>\n              <Typography component=\"h4\" fontWeight=\"fontWeightBold\">\n              Master Volume\n              </Typography>\n              <br />\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Overrides all other sound settings in this application\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Slider \n                marks={true} \n                step={10} \n                min={0} \n                max={100} \n                onChange={this.handleVolume} \n                value={this.state.volume} \n              />\n            </CardActions>\n          </Card>\n\n          <Card className=\"card\">\n            <CardContent>\n              <Typography component=\"h4\" fontWeight=\"fontWeightBold\">\n                Sound Quality\n              </Typography>\n              <br />\n              <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\n                Manually control the music quality in event of poor connection\n              </Typography>\n            </CardContent>\n            <CardActions>\n              <Select value={this.state.quality} onChange ={this.handleQuality}>\n                <MenuItem value={1}>Low</MenuItem>\n                <MenuItem value={2}>Normal</MenuItem>\n                <MenuItem value={3}>High</MenuItem>\n              </Select>\n            </CardActions>\n          </Card>\n        </div>\n        \n        <div className=\"notifications-container\">\n          <Typography component=\"h4\" variant=\"h5\">System Notifications:</Typography>\n          <div>\n            {this.state.notifications.map((notification, index) => (\n                <p key={index}>\n                  {notification}\n                </p>\n            ))}\n          </div>\n        </div>\n        \n\n      </div>\n    )\n  }\n}\n  \nexport default Dashboard;","import React from \"react\";\nimport { TextField, Button } from '@material-ui/core';\nimport NavBar from './Components/NavBar';\nimport Dashboard from './Components/Dashboard';\nimport './App.css';\n\nclass App extends React.Component {\n  state = {\n    username: '',\n    password: '',\n    loggedIn: false,\n  }\n\n  handleChange = e => {\n    this.setState({\n      [e.target.name]: e.target.value\n    })\n  }\n\n  login = e => {\n    this.setState({\n      username: '',\n      password: '',\n      loggedIn: true,\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        {<NavBar />}\n\n        {this.state.loggedIn ? <Dashboard /> :(\n         <div className=\"form-container\">\n          <form className=\"login-form\" onSubmit={this.login}>\n            <TextField\n              label=\"Username\" \n              type=\"text\" \n              placeholder =\"Username*\"\n              value={this.state.username} \n              onChange={this.handleChange} \n              name=\"username\" \n              required \n            />\n            <TextField\n              label=\"Password\" \n              type=\"password\" \n              placeholder=\"Password*\"\n              value={this.state.password} \n              onChange={this.handleChange} \n              name=\"password\" \n              required \n            />\n            <br/>\n            <Button variant=\"contained\" color=\"primary\" type=\"submit\">LOGIN</Button>\n          </form>\n        </div>\n        )}\n        \n      </div>\n    )\n  }\n}\n\nexport default App;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}